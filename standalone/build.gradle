apply plugin: 'com.android.application'
apply plugin: 'org.jetbrains.kotlin.android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId "com.bammellab.standalone"

        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        versionCode buildConfig.version.code
        versionName buildConfig.version.name

        resConfigs 'en'
        vectorDrawables.useSupportLibrary = true
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            signingConfig signingConfigs.release
        }

        debug {
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        lintConfig rootProject.file('lint.xml')

        checkDependencies true
        checkTestSources true
        explainIssues false

        // from Jake Wharton - not true yet for this project:
        // We run a full lint analysis as build part in CI, so skip vital checks for assemble task.
        checkReleaseBuilds false

        // added to keep going
        abortOnError false
    }
}

// signing solution courtesy of http://gist.github.com/gabrielemariotti/6856974

Properties props = new Properties()
def propFile = new File('gradle/signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'gradle/signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'gradle/signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    implementation project(':mollib')
    implementation deps.kotlin.stdlib.jdk
    implementation deps.kotlin.coroutines.jdk
    implementation deps.kotlin.coroutines.android
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'com.google.android.material:material:1.1.0'
    implementation deps.android.support.cardview
    implementation 'androidx.annotation:annotation:1.1.0'
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'androidx.core:core-ktx:1.4.0-alpha01'
    implementation 'com.google.guava:guava:28.1-jre'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
}
//
//kotlin {
//    experimental {
//        coroutines 'enable'
//    }
//}
