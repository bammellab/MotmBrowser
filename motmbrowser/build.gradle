apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion buildConfig.compileSdk

    defaultConfig {
        applicationId "com.bammellab.motm"

        minSdkVersion buildConfig.minSdk
        targetSdkVersion buildConfig.targetSdk

        versionCode buildConfig.version.code
        versionName buildConfig.version.name

        resConfigs 'en'
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }
    signingConfigs {
        release
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles(
                    file('src/main/proguard-android.pro'),
                    file('src/main/proguard-app.pro')
            )
            signingConfig signingConfigs.release
        }

        debug {
            minifyEnabled false
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        textReport true
        textOutput 'stdout'
        lintConfig rootProject.file('lint.xml')

        checkDependencies true
        checkTestSources true
        explainIssues false

        // from Jake Wharton - not true yet for this project:
        // We run a full lint analysis as build part in CI, so skip vital checks for assemble task.
        checkReleaseBuilds false

        // added to keep going
        abortOnError false
    }
}

// signing solution courtesy of http://gist.github.com/gabrielemariotti/6856974

Properties props = new Properties()
def propFile = new File('gradle/signing.properties')
if (propFile.canRead()) {
    props.load(new FileInputStream(propFile))

    if (props != null && props.containsKey('STORE_FILE') && props.containsKey('STORE_PASSWORD') &&
            props.containsKey('KEY_ALIAS') && props.containsKey('KEY_PASSWORD')) {
        android.signingConfigs.release.storeFile = file(props['STORE_FILE'])
        android.signingConfigs.release.storePassword = props['STORE_PASSWORD']
        android.signingConfigs.release.keyAlias = props['KEY_ALIAS']
        android.signingConfigs.release.keyPassword = props['KEY_PASSWORD']
    } else {
        println 'gradle/signing.properties found but some entries are missing'
        android.buildTypes.release.signingConfig = null
    }
} else {
    println 'gradle/signing.properties not found'
    android.buildTypes.release.signingConfig = null
}

dependencies {
    implementation project(':mollib')
    implementation deps.kotlin.stdlib.jdk
    implementation deps.kotlin.coroutines.jdk
    implementation deps.kotlin.coroutines.android

    implementation deps.android.support.appcompat
    implementation deps.android.support.constraintLayout
    implementation deps.android.x.coreKtx
    implementation deps.android.material
    implementation deps.android.support.cardview

    implementation deps.okhttp.client
    implementation deps.retrofit.client

    implementation deps.pdbparser
    implementation deps.timber
    implementation deps.picasso
    implementation deps.guava


    implementation deps.glide
    kapt deps.glide

    implementation (deps.retrofit.converterXml) {
        exclude group: 'stax', module: 'stax-api'
        exclude group: 'stax', module: 'stax'
        exclude group: 'xpp3', module: 'xpp3'
        exclude group: 'stream', module: 'stream'
    }

    testImplementation deps.annotations
    testImplementation deps.junit
    testImplementation deps.truth
}
